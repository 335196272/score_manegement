<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bo.common.dao.SettingDao">
<cache/>
  <resultMap id="Setting" type="com.bo.common.entity.Setting">
    <id column="setting_id" jdbcType="BIGINT" property="settingId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Base_Column_List">
    setting_id, name, value, description, create_by, create_date, update_by, update_date
  </sql>
  
  <insert id="create" parameterType="com.bo.common.entity.Setting">
    insert into setting (setting_id, name, value, description, 
      create_by, create_date, update_by, update_date)
    values (#{settingId}, #{name}, #{value}, #{description}, 
      #{createBy}, #{createDate}, #{updateBy}, #{updateDate})
  </insert>
  
  <delete id="delete" parameterType="java.lang.Long">
    delete from setting
    where setting_id = #{settingId}
  </delete>
  
  <update id="update" parameterType="com.bo.common.entity.Setting">
    update setting
    set name = #{name},
      value = #{value},
      description = #{description},
      create_by = #{createBy},
      create_date = #{createDate},
      update_by = #{updateBy},
      update_date = #{updateDate}
    where setting_id = #{settingId}
  </update>
  
  <select id="find" parameterType="java.lang.Long" resultMap="Setting">
    select 
    <include refid="Base_Column_List" />
    from setting
    where setting_id = #{settingId}
  </select>
  
  <select id="count" resultType="java.lang.Integer">
    select count(setting_id)
    from setting
    <where>
      <if test="name != null" >
	    name like concat('%',#{name},'%')
	  </if>
      <if test="value != null" >
        and value like concat('%',#{value},'%')
      </if>
      <if test="description != null" >
        and description like concat('%',#{description},'%')
      </if>
      <if test="ge_updateDate != null" >
	    <![CDATA[and update_date >= #{ge_updateDate}]]> 
	  </if>
	  <if test="le_updateDate != null" >
	    <![CDATA[and update_date <= #{le_updateDate}]]> 
	  </if>
    </where>
  </select>
  
  <select id="list" resultMap="Setting">
    select 
    <include refid="Base_Column_List" />
    from setting
    <where>
      <if test="name != null" >
	    name like concat('%',#{name},'%')
	  </if>
      <if test="value != null" >
        and value like concat('%',#{value},'%')
      </if>
      <if test="description != null" >
        and description like concat('%',#{description},'%')
      </if>
      <if test="ge_updateDate != null" >
	    <![CDATA[and update_date >= #{ge_updateDate}]]> 
	  </if>
	  <if test="le_updateDate != null" >
	    <![CDATA[and update_date <= #{le_updateDate}]]> 
	  </if>
    </where>
    <if test="orderField != null" >
      order by ${orderField} ${orderDirection}
    </if>
    <if test="startRow != null" >
      limit #{startRow}, #{numPerPage}
    </if>
  </select>
  
</mapper>